var searchIndex = JSON.parse('{\
"billy":{"doc":"","t":[13,3,4,13,13,11,11,11,11,11,11,11,11,11,11,11,5,5,11,12,11,11,5,0,11,11,11,11,11,11,11,11,11,11,5,5,5],"n":["AddBill","Bills","MainMenu","RemoveBill","ViewBill","add","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","fmt","from","from","get_all_bills","get_amount_as_float","get_input","get_menu_string","info","into","into","main","menu","new","remove","show","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","add_bill","remove_bill","view_bills"],"q":["billy","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","billy::menu","",""],"d":["","The bills template ‘Debug’ to easily print on terminal …","Main menu options","","","Add a new bill ‘&amp;mut self’ access mutably the ‘info: …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Print the bills Reference itself ‘&amp;self’ so it’s …","Transform the ‘String’ bill amount input into a ‘f64…","Get the user input data as a ‘String’","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Main menu features","Instanciate a new ‘Bills’ struct with an empty HashMap","Remove a bill","","","","","","","","","Acceps mutable reference to the ‘Bills’ struct in …","Remove a bill","View all bills"],"i":[9,0,0,9,9,1,9,1,9,1,1,1,1,9,1,1,0,0,9,1,9,1,0,0,1,1,9,1,9,1,9,1,9,1,0,0,0],"f":[0,0,0,0,0,[[1,2,3]],[[]],[[]],[[]],[[]],[1,1],[[]],[[1,4],5],[[]],[[]],[1,6],[[],[[7,[3]]]],[[],[[7,[2]]]],[8,[[7,[9]]]],0,[[]],[[]],[[]],0,[[],1],[[1,2]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[1],[1],[1]],"p":[[3,"Bills"],[3,"String"],[15,"f64"],[3,"Formatter"],[6,"Result"],[3,"HashMap"],[4,"Option"],[15,"str"],[4,"MainMenu"],[4,"Result"],[3,"TypeId"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
